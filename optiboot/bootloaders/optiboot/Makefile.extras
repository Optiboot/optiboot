#
# Makefile for "other" implemented platforms.
#
# * Copyright 2013-2015 by Bill Westfield.  Part of Optiboot.
# * This software is licensed under version 2 of the Gnu Public Licence.
# * See optiboot.c for details.
#

# include Makefile that contains common definitions of variables
include Makefile.inc

#
# Extra chips (maybe) supported by optiboot
# Note that these are usually only minimally tested.
#

#
# ATmega88
#
HELPTEXT += "target atmega88      - ATmega88 or ATmega88p (28pin, 8k)\n"
atmega88: TARGET = atmega88
atmega88: MCU_TARGET = atmega88
atmega88: CFLAGS += $(COMMON_OPTIONS)
atmega88: AVR_FREQ ?= 16000000L 
atmega88: FLASH_SIZE_KIB = 8
ifndef BIGBOOT ## standard version is 512 Bytes long; starts earlier
atmega88: BOOT_SECTION_SIZE_B = 512
else ## bigboot version is 1024 Bytes long; starts earlier
atmega88: BOOT_SECTION_SIZE_KIB = 1
endif
atmega88: LDSECTIONS = $(COMMON_SECTIONS) -Wl,--gc-sections -Wl,--undefined=optiboot_version
atmega88: $(PROGRAM)_atmega88.hex
atmega88: $(PROGRAM)_atmega88.lst

atmega88_isp: atmega88
atmega88_isp: TARGET = atmega88
atmega88_isp: MCU_TARGET = atmega88
# 2.7V brownout
atmega88_isp: HFUSE ?= DD
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega88_isp: LFUSE ?= FF
# 512 byte boot
atmega88_isp: EFUSE ?= 04
atmega88_isp: isp

atmega88p_isp: atmega88
atmega88p_isp: TARGET = atmega88
atmega88p_isp: MCU_TARGET = atmega88p
# 2.7V brownout
atmega88p_isp: HFUSE ?= DD
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega88p_isp: LFUSE ?= FF
# 512 byte boot
atmega88p_isp: EFUSE ?= 04
atmega88p_isp: isp

#
# ATmega168p [QFN32]
#
HELPTEXT += "target atmega168p    - ATmega168p\n"
atmega168p: TARGET = atmega168p
atmega168p: MCU_TARGET = atmega168p
atmega168p: CFLAGS += $(COMMON_OPTIONS)
atmega168p: AVR_FREQ ?= 16000000L 
atmega168p: $(PROGRAM)_atmega168p_16MHz.hex
atmega168p: $(PROGRAM)_atmega168p_16MHz.lst

atmega168p_isp: atmega168p
atmega168p_isp: TARGET = atmega168p
# 2.7V brownout
atmega168p_isp: HFUSE ?= DD
# Low power xtal (16MHz) 16KCK/14CK+65ms
atmega168p_isp: LFUSE ?= FF
# 512 byte boot
atmega168p_isp: EFUSE ?= 04
atmega168p_isp: isp

HELPTEXT += "target atmega16      - ATmega16 (40pin, 16k)\n"
atmega16: TARGET = atmega16
atmega16: MCU_TARGET = atmega16
atmega16: CFLAGS += $(COMMON_OPTIONS)
atmega16: AVR_FREQ ?= 16000000L 
atmega16: $(PROGRAM)_atmega16.hex
atmega16: $(PROGRAM)_atmega16.lst

#
# ATmega32
#
HELPTEXT += "target atmega32      - ATmega32 (40pin, 32k)\n"
atmega32: TARGET = atmega32
atmega32: MCU_TARGET = atmega32
atmega32: CFLAGS += $(COMMON_OPTIONS)
atmega32: AVR_FREQ ?= 16000000L
atmega32: FLASH_SIZE_KIB = 32
ifndef BIGBOOT ## standard version is 512 Bytes long; starts earlier
atmega32: BOOT_SECTION_SIZE_B = 512
else ## bigboot version is 1024 Bytes long; starts earlier
atmega32: BOOT_SECTION_SIZE_KIB = 1
endif
atmega32: LDSECTIONS = $(COMMON_SECTIONS)
atmega32: $(PROGRAM)_atmega32.hex
atmega32: $(PROGRAM)_atmega32.lst

atmega32_isp: atmega32
atmega32_isp: TARGET = atmega32
atmega32_isp: MCU_TARGET = atmega32
# No OCD or JTAG, SPIEN, CKOPT (for full swing xtal), Bootsize=512B
atmega32_isp: HFUSE ?= CE
# 2.7V brownout, 16MHz Xtal, 16KCK/14CK+65ms
atmega32_isp: LFUSE ?= BF
atmega32_isp: isp

#Atmega128RFA1
HELPTEXT += "target atmega128rfa1  - ATmega128RFA1 (100pin, 128k)\n"
atmega128rfa1: MCU_TARGET = atmega128rfa1
atmega128rfa1: CFLAGS += $(COMMON_OPTIONS) -DBIGBOOT $(UART_CMD)
atmega128rfa1: AVR_FREQ ?= 16000000L
atmega128rfa1: FLASH_SIZE_KIB = 128
## bigboot version is 1024 Bytes long; starts earlier
atmega128rfa1: BOOT_SECTION_SIZE_KIB = 1
atmega128rfa1: LDSECTIONS = $(COMMON_SECTIONS)
atmega128rfa1: $(PROGRAM)_atmega128rfa1.hex
ifndef PRODUCTION
atmega128rfa1: $(PROGRAM)_atmega128rfa1.lst
endif


# 1MHz clocked platforms/boards
#
# These are capable of 9600 baud
#

luminet: TARGET = $@
luminet: CHIP = attiny84
luminet:
	"$(MAKE)" $(CHIP) AVR_FREQ=1000000L LED_START_FLASHES=0 BAUD_RATE=9600
	mv $(PROGRAM)_$(CHIP).hex $(PROGRAM)_$(TARGET).hex
	mv $(PROGRAM)_$(CHIP).lst $(PROGRAM)_$(TARGET).lst

luminet_isp: luminet
luminet_isp: TARGET = luminet
luminet_isp: MCU_TARGET = attiny84
# Brownout disabled
luminet_isp: HFUSE ?= DF
# 1MHz internal oscillator, slowly rising power
luminet_isp: LFUSE ?= 62
# Self-programming enable
luminet_isp: EFUSE ?= FE
luminet_isp: isp

